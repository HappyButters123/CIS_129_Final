<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AppartmentDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AppartmentDatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CIS_129_Final.Properties.Settings.GlobalReference.Default.AppartmentDatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableTableAdapter" GeneratorDataComponentClassName="TableTableAdapter" Name="Table" UserDataComponentName="TableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AppartmentDatabaseConnectionString (Settings)" DbObjectName="dbo.[Table]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Table] WHERE (([UnitId] = @Original_UnitId) AND ([PowerInWats] = @Original_PowerInWats) AND ([AreaInSquareFeet] = @Original_AreaInSquareFeet))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PowerInWats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PowerInWats" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AreaInSquareFeet" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AreaInSquareFeet" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Table] ([UnitId], [PowerInWats], [AreaInSquareFeet]) VALUES (@UnitId, @PowerInWats, @AreaInSquareFeet);
SELECT UnitId, PowerInWats, AreaInSquareFeet FROM [Table] WHERE (UnitId = @UnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PowerInWats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PowerInWats" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AreaInSquareFeet" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AreaInSquareFeet" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UnitId, PowerInWats, AreaInSquareFeet FROM dbo.[Table]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Table] SET [UnitId] = @UnitId, [PowerInWats] = @PowerInWats, [AreaInSquareFeet] = @AreaInSquareFeet WHERE (([UnitId] = @Original_UnitId) AND ([PowerInWats] = @Original_PowerInWats) AND ([AreaInSquareFeet] = @Original_AreaInSquareFeet));
SELECT UnitId, PowerInWats, AreaInSquareFeet FROM [Table] WHERE (UnitId = @UnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PowerInWats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PowerInWats" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AreaInSquareFeet" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AreaInSquareFeet" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PowerInWats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PowerInWats" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AreaInSquareFeet" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AreaInSquareFeet" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UnitId" DataSetColumn="UnitId" />
              <Mapping SourceColumn="PowerInWats" DataSetColumn="PowerInWats" />
              <Mapping SourceColumn="AreaInSquareFeet" DataSetColumn="AreaInSquareFeet" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DataSet1" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Table" msprop:Generator_RowEvHandlerName="TableRowChangeEventHandler" msprop:Generator_RowDeletedName="TableRowDeleted" msprop:Generator_RowDeletingName="TableRowDeleting" msprop:Generator_RowEvArgName="TableRowChangeEvent" msprop:Generator_TablePropName="Table" msprop:Generator_RowChangedName="TableRowChanged" msprop:Generator_RowChangingName="TableRowChanging" msprop:Generator_TableClassName="TableDataTable" msprop:Generator_RowClassName="TableRow" msprop:Generator_TableVarName="tableTable" msprop:Generator_UserTableName="Table">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UnitId" msprop:Generator_ColumnPropNameInRow="UnitId" msprop:Generator_ColumnPropNameInTable="UnitIdColumn" msprop:Generator_ColumnVarNameInTable="columnUnitId" msprop:Generator_UserColumnName="UnitId" type="xs:int" />
              <xs:element name="PowerInWats" msprop:Generator_ColumnPropNameInRow="PowerInWats" msprop:Generator_ColumnPropNameInTable="PowerInWatsColumn" msprop:Generator_ColumnVarNameInTable="columnPowerInWats" msprop:Generator_UserColumnName="PowerInWats" type="xs:int" />
              <xs:element name="AreaInSquareFeet" msprop:Generator_ColumnPropNameInRow="AreaInSquareFeet" msprop:Generator_ColumnPropNameInTable="AreaInSquareFeetColumn" msprop:Generator_ColumnVarNameInTable="columnAreaInSquareFeet" msprop:Generator_UserColumnName="AreaInSquareFeet" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Table" />
      <xs:field xpath="mstns:UnitId" />
    </xs:unique>
  </xs:element>
</xs:schema>